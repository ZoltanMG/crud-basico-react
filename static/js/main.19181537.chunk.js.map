{"version":3,"sources":["components/ListadoNombres.jsx","App.jsx","index.js"],"names":["ListadoNombres","useState","nombre","setNombre","listaNombres","setListaNombres","modoEdicion","setModoEdicion","id","setId","error","setError","className","map","item","onClick","nuevaArray","filter","deleteNombre","editar","onSubmit","e","preventDefault","nuevoArray","trim","nuevoNombre","uniqid","onChange","target","value","type","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAoHeA,EAjHQ,WAAO,IAAD,EACGC,mBAAS,IADZ,mBAClBC,EADkB,KACVC,EADU,OAEeF,mBAAS,IAFxB,mBAElBG,EAFkB,KAEJC,EAFI,OAGaJ,oBAAS,GAHtB,mBAGlBK,EAHkB,KAGLC,EAHK,OAILN,mBAAS,IAJJ,mBAIlBO,EAJkB,KAIdC,EAJc,OAKCR,mBAAS,MALV,mBAKlBS,EALkB,KAKXC,EALW,KAmDzB,OACI,gCACI,kEACA,sBAAKC,UAAU,MAAf,UACI,sBAAKA,UAAU,MAAf,UACI,oDACA,oBAAIA,UAAU,aAAd,SAEQR,EAAaS,KAAI,SAAAC,GAAI,OACjB,qBAAkBF,UAAU,kBAA5B,UACKE,EAAKZ,OACN,wBACIU,UAAU,6BACVG,QAAS,YAlCxB,SAACP,GAClB,IAAMQ,EAAaZ,EAAaa,QAAO,SAAAH,GAAI,OAAIA,EAAKN,KAAOA,KAC3DH,EAAgBW,GAgCiCE,CAAaJ,EAAKN,KAFvC,sBAMA,wBACII,UAAU,2BACVG,QAAS,YAnC9B,SAACD,GACZP,GAAe,GACfJ,EAAUW,EAAKZ,QACfO,EAAMK,EAAKN,IAgCsCW,CAAOL,IAF5B,sBARKA,EAAKN,YAmB9B,sBAAKI,UAAU,MAAf,UACI,6BACKN,EAAc,oBAAsB,uCAEzC,uBAAMc,SAAUd,EA1CX,SAACe,GAClBA,EAAEC,iBACF,IAAMC,EAAanB,EAAaS,KAAI,SAAAC,GAAI,OACpCA,EAAKN,KAAOA,EAAK,CAAEA,GAAIA,EAAIN,OAAQA,GAAWY,KAElDT,EAAgBkB,GAChBhB,GAAe,GACfJ,EAAU,KApCI,SAACkB,GAEf,GADAA,EAAEC,iBACGpB,EAAOsB,OAAZ,CAIA,IAAMC,EAAc,CAChBjB,GAAIkB,MACJxB,OAAQA,GAEZG,EAAgB,GAAD,mBAAKD,GAAL,CAAmBqB,KAClCtB,EAAU,IACVQ,EAAS,WATLA,EAAS,gCAoEuDC,UAAU,aAAlE,UACI,uBACIe,SAAU,SAACN,GAAQlB,EAAUkB,EAAEO,OAAOC,QACtCjB,UAAU,oBACVkB,KAAK,OACLC,YAAY,SACZF,MAAO3B,IAEX,uBACIU,UAAU,yBACVkB,KAAK,SACLD,MAAOvB,EAAc,gBAAkB,wBAIlC,MAATI,EACI,qBAAKE,UAAU,qBAAf,SACKF,IAIL,kCCjGbsB,MARf,WACE,OACE,qBAAKpB,UAAU,YAAf,SACE,cAAC,EAAD,OCCNqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.19181537.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nconst ListadoNombres = () => {\r\n    const [nombre, setNombre] = useState('')\r\n    const [listaNombres, setListaNombres] = useState([])\r\n    const [modoEdicion, setModoEdicion] = useState(false)\r\n    const [id, setId] = useState('')\r\n    const [error, setError] = useState(null)\r\n\r\n    // - addNombre realiza lo siguiente:\r\n    // evita que la pagina se actualice cuando se envia el formulario,\r\n    // crea un objeto con un id unico y asigna el nombre regiatrado por el usuario en el formulario,\r\n    // a침ade el objeto a la array listaNombre,\r\n    // vacia el imputo del fomulario diligenciado previamente.\r\n    const addNombre = (e) => {\r\n        e.preventDefault()\r\n        if (!nombre.trim()){\r\n            setError('El campo nombre esta vacio.')\r\n            return\r\n        }\r\n        const nuevoNombre = {\r\n            id: uniqid(),\r\n            nombre: nombre\r\n        }\r\n        setListaNombres([...listaNombres, nuevoNombre])\r\n        setNombre('')\r\n        setError(null)\r\n    }\r\n\r\n    // - deleteNombre realiza:\r\n    // crea una nueva array omitiendo el objeto con la id pasada,\r\n    // cambia la nueva array por listaNombres.\r\n    const deleteNombre = (id) => {\r\n        const nuevaArray = listaNombres.filter(item => item.id !== id)\r\n        setListaNombres(nuevaArray)\r\n    }\r\n\r\n    const editar = (item) => {\r\n        setModoEdicion(true)\r\n        setNombre(item.nombre)\r\n        setId(item.id)\r\n    }\r\n\r\n    const editarNombre = (e) => {\r\n        e.preventDefault()\r\n        const nuevoArray = listaNombres.map(item =>\r\n            item.id === id ? { id: id, nombre: nombre } : item\r\n        )\r\n        setListaNombres(nuevoArray)\r\n        setModoEdicion(false)\r\n        setNombre('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Aplicaci칩n de CRUD b치sica.</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h2>Listado de nombres</h2>\r\n                    <ul className=\"list-group\">\r\n                        {\r\n                            listaNombres.map(item =>\r\n                                <li key={item.id} className=\"list-group-item\">\r\n                                    {item.nombre}\r\n                                    <button\r\n                                        className=\"btn btn-danger float-right\"\r\n                                        onClick={() => { deleteNombre(item.id) }}\r\n                                    >\r\n                                        Eliminar\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn btn-info float-right\"\r\n                                        onClick={() => { editar(item) }}\r\n                                    >\r\n                                        Editar\r\n                                    </button>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <h2>\r\n                        {modoEdicion ? 'Actualizar nombre' : 'Formularios para a침adir nombres'}\r\n                    </h2>\r\n                    <form onSubmit={modoEdicion ? editarNombre : addNombre} className=\"form-group\">\r\n                        <input\r\n                            onChange={(e) => { setNombre(e.target.value) }}\r\n                            className=\"form-control mb-3\"\r\n                            type=\"text\"\r\n                            placeholder=\"Nombre\"\r\n                            value={nombre}\r\n                        />\r\n                        <input\r\n                            className=\"btn btn-info btn-block\"\r\n                            type=\"submit\"\r\n                            value={modoEdicion ? 'Editar nombre' : 'Registrar nombre'}\r\n                        />\r\n                    </form>\r\n                    {\r\n                        error != null ? (\r\n                            <div className=\"alert alert-danger\">\r\n                                {error}\r\n                            </div>\r\n                        ):\r\n                        (\r\n                            <div></div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListadoNombres;","import ListadoNombres from './components/ListadoNombres'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <ListadoNombres />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}